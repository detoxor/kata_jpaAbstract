<?xml version="1.0" encoding="UTF-8"?>
<persistence xmlns="http://java.sun.com/xml/ns/persistence"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/persistence http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd"
	version="2.0">
	<persistence-unit name="local-unit" transaction-type="RESOURCE_LOCAL">
		<provider>org.apache.openjpa.persistence.PersistenceProviderImpl</provider>
		<class>cz.tomascejka.learn.jpa.jpabstract.domain.Department</class>
		<class>cz.tomascejka.learn.jpa.jpabstract.domain.Employee</class>
		<class>cz.tomascejka.learn.jpa.jpabstract.domain.BaseDomain</class>
		<class>cz.tomascejka.learn.jpa.jpabstract.domain.Person</class>
		<properties>
			<property name="javax.persistence.jdbc.driver" value="org.hsqldb.jdbcDriver" /><!-- org.h2.Driver, org.hsqldb.jdbcDriver -->
			<property name="javax.persistence.jdbc.url" value="jdbc:hsqldb:mem:testdb" /><!-- jdbc:h2:/tmp/testdb, jdbc:hsqldb:/tmp/testdb -->
			<!-- OPENJPA -->
			<property name="javax.persistence.jdbc.user" value="sa" />
			<property name="javax.persistence.jdbc.password" value="" />
			<property name="openjpa.Log"  value="DefaultLevel=INFO,SQL=ERROR,Tool=INFO" />
			<property name="openjpa.jdbc.SynchronizeMappings" value="buildSchema(foreignKeys=true,schemaAction='dropDB,add')"/>
			
			<!-- if you want create foreign keys, use the following lines -->
			<!-- property name="openjpa.jdbc.SynchronizeMappings" value="buildSchema(foreignKeys=true,schemaAction='dropDB,add')"/>
			<property name="openjpa.jdbc.SchemaFactory" value="native(foreignKeys=true)" />
			<property name="openjpa.jdbc.MappingDefaults" value="ForeignKeyDeleteAction=restrict, JoinForeignKeyDeleteAction=restrict"/-->
		
		<!-- -javaagent:/media/data/tomascejka/.Private/Repositories/.m2/org/apache/openjpa/openjpa/2.3.0/openjpa-2.3.0.jar -->	
		</properties>
	</persistence-unit>
</persistence>